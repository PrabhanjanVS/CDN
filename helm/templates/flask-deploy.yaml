{{- if .Values.flask.enabled }}
---
# Flask Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-flask-app
  labels:
    app: {{ .Release.Name }}-flask-app
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.flask.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-flask-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-flask-app
    spec:
      containers:
      - name: flask
        image: "{{ .Values.flask.deployment.image.repository }}:{{ .Values.flask.deployment.image.tag }}"
        command: {{ .Values.flask.deployment.command | toYaml | nindent 10 }}
        args: 
        - {{ .Values.flask.deployment.args[0] | quote }}
        ports:
        - containerPort: {{ .Values.flask.service.port }}
        env:
        {{- range $key, $value := .Values.flask.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- with .Values.flask.deployment.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
---
# Flask Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-flask-service
  labels:
    app: {{ .Release.Name }}-flask-app
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.flask.service.type }}
  ports:
    - protocol: TCP
      port: {{ .Values.flask.service.port }}
      targetPort: {{ .Values.flask.service.targetPort }}
      {{- if eq .Values.flask.service.type "NodePort" }}
      nodePort: {{ .Values.flask.service.nodePort }}
      {{- end }}
  selector:
    app: {{ .Release.Name }}-flask-app
{{- end }}