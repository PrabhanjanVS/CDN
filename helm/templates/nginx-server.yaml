---
# 1. PersistentVolumeClaim for video storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# 2. ConfigMap for nginx.conf
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    server {
      listen 80;
      server_name localhost;

      location / {
        root /usr/share/nginx/html;
        autoindex on;
        autoindex_exact_size off;
        autoindex_format html;
        autoindex_localtime on;
        types {
          video/mp4 mp4;
          video/webm webm;
        }
      }
    }

---
# 3. Deployment with video download on startup
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-server
spec:
  selector:
    matchLabels:
      app: nginx-server
  template:
    metadata:
      labels:
        app: nginx-server
    spec:
      containers:
      - name: nginx
        image: nginx:alpine  # Using Alpine for smaller size
        ports:
        - containerPort: 80
        volumeMounts:
        - name: video-storage
          mountPath: "/usr/share/nginx/html"
        - name: nginx-config
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: nginx.conf
      volumes:
      - name: video-storage
        persistentVolumeClaim:
          claimName: nginx-storage
      - name: nginx-config
        configMap:
          name: nginx-config

---
# 4. Service to expose port 80
apiVersion: v1
kind: Service
metadata:
  name: nginx-server
spec:
  type: NodePort
  selector:
    app: nginx-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080