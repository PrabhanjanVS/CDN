worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Custom log format
    log_format video_log '[$time_local] $remote_addr "$request" '
                        'Status:$status Cache:$upstream_cache_status '
                        'Range:"$http_range"';

    proxy_cache_path /var/cache/nginx/video_cache 
                    levels=1:2
                    keys_zone=VIDEO_CACHE:100m
                    inactive=1h
                    max_size=5g
                    use_temp_path=off;

    server {
        listen 8081;
        server_name localhost;
        access_log /var/log/nginx/video_access.log video_log;

        location /videos/ {
            proxy_pass http://nginx-server:80/;
            proxy_cache VIDEO_CACHE;
            proxy_cache_key "$uri$http_range";
            proxy_cache_valid 200 206 1h;
            proxy_cache_use_stale error timeout updating;

            # Byte-range support
            proxy_set_header Range $http_range;
            proxy_http_version 1.1;
            
            # Cache headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header Accept-Ranges bytes;

            # Error handling
            proxy_next_upstream error timeout invalid_header;
            proxy_intercept_errors on;
            error_page 500 502 503 504 =200 @fallback;
        }

        location @fallback {
            internal;
            proxy_pass http://flask-hls-app:5000;
        }
    }
}